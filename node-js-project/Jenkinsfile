pipeline {
  agent  docker 

  environment {
    DOCKERHUB_CREDENTIALS = credentials('docker-token')
    SSH_CREDENTIALS = credentials('ssh-creds')
    K8S_SECRET_NAME = 'regcred'
    scannerHome = tool 'SonarQubeScanner'
  }
  stages {
    stage('Git Clone') {
            steps {
                checkout scm
            }
        }

    stage('Build') {
      steps {
            script {
          withCredentials([string(credentialsId: 'docker-token' , variable: 'DOCKERHUB_TOKEN')]) {
           sh """
           cd node-js-project
           docker build -t shantanu1990.jfrog.io/docker-repo/nodejs .
           """
         }
      }
   }
 }
    stage('Login') {
      steps {
            script {
          withCredentials([string(credentialsId: 'docker-token' , variable: 'DOCKERHUB_TOKEN')]) {
           sh "docker login -u paranjpeshantanu986@gmail.com -p \$DOCKERHUB_TOKEN shantanu1990.jfrog.io"
      }
    }
   }
 }
    
	stage('SonarQube Analysis') {
	  steps {
	     script {
			withSonarQubeEnv('sq1') {
                         sh """
                 	 cd node-js-project    	 
             		 ${scannerHome}/bin/sonar-scanner
 			 """
		    }
		}
           }
       }
	
    stage('Push') {
      steps {
        sh 'docker push shantanu1990.jfrog.io/docker-repo/nodejs'
      }
    }


    stage('SSH and Execute Commands on Remote Host') {
            steps {
                    script {
                          withCredentials([string(credentialsId: 'docker-token', variable: 'ARTIFACTORY_TOKEN')]) {
                            sshagent(credentials : ['ssh-creds']) {
                             sh """
                             ssh -o StrictHostKeyChecking=no root@192.168.56.112 << EOF
			    kubectl create secret docker-registry \${K8S_SECRET_NAME} --docker-server=shantanu1990.jfrog.io --docker-username=paranjpeshantanu986@gmail.com --docker-password=\$ARTIFACTORY_TOKEN 
                             kubectl apply -f nodejs-dep.yml
			     sleep 10
			     kubectl get po  
                             """
                             }
                          }
                       }
                   }
                }
				   
	stage('Docker Logout') {
          steps {
           sh 'docker logout shantanu1990.jfrog.io'
      }
    }
  }
}

